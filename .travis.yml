language: php

dist: xenial

git:
    depth: 2

addons:
    apt_packages:
        - parallel
        - language-pack-fr-base
        - ldap-utils
        - slapd
        - libsasl2-dev

env:
    global:
        - MIN_PHP=5.5.9
        - SYMFONY_PROCESS_PHP_TEST_BINARY=~/.phpenv/versions/5.6/bin/php
        - SYMFONY_PHPUNIT_REMOVE_RETURN_TYPEHINT=1
        - SYMFONY_PHPUNIT_DISABLE_RESULT_CACHE=1

matrix:
    include:
        - php: 5.5
          env: php_extra="5.6 7.0 7.1 7.2"
          dist: trusty

cache:
    directories:
        - .phpunit
        - php-$MIN_PHP
        - ~/php-ext

before_install:
    - |
      # General configuration
      set -e
      stty cols 120
      [ -d ~/.composer ] || mkdir ~/.composer
      cp .github/composer-config.json ~/.composer/config.json
      export PHPUNIT=$(readlink -f ./phpunit)
      export PHPUNIT_X="$PHPUNIT --exclude-group tty,benchmark,intl-data"
      export COMPOSER_UP='composer update --no-progress --no-suggest --ansi'
      export COMPONENTS=src/Symfony/Component/Process
      find ~/.phpenv -name xdebug.ini -delete

      if [[ $TRAVIS_PHP_VERSION = 5.* ]]; then
          composer () {
              $HOME/.phpenv/versions/7.1/bin/php $HOME/.phpenv/versions/7.1/bin/composer config platform.php $(echo ' <?php echo preg_replace("/-.*/", "", PHP_VERSION);' | php /dev/stdin)
              $HOME/.phpenv/versions/7.1/bin/php $HOME/.phpenv/versions/7.1/bin/composer $*
          }
          export -f composer
          ~/.phpenv/versions/7.1/bin/composer self-update
      fi

      nanoseconds () {
          local cmd="date"
          local format="+%s%N"
          local os=$(uname)
          if hash gdate > /dev/null 2>&1; then
            cmd="gdate"
          elif [[ "$os" = Darwin ]]; then
            format="+%s000000000"
          fi
          $cmd -u $format
      }
      export -f nanoseconds

      # tfold is a helper to create folded reports
      tfold () {
          local title="🐘 $PHP $1 $FLIP"
          local fold=$(echo $title | sed -r 's/[^-_A-Za-z0-9]+/./g')
          shift
          local id=$(printf %08x $(( RANDOM * RANDOM )))
          local start=$(nanoseconds)
          echo -e "travis_fold:start:$fold"
          echo -e "travis_time:start:$id"
          echo -e "\\e[1;34m$title\\e[0m"

          bash -xc "$*" 2>&1
          local ok=$?
          local end=$(nanoseconds)
          echo -e "\\ntravis_time:end:$id:start=$start,finish=$end,duration=$(($end-$start))"
          (exit $ok) &&
              echo -e "\\e[32mOK\\e[0m $title\\n\\ntravis_fold:end:$fold" ||
              echo -e "\\e[41mKO\\e[0m $title\\n"
          (exit $ok)
      }
      export -f tfold

    - |
      # Install sigchild-enabled PHP to test the Process component on the lowest PHP matrix line
      if [[ ! $deps && $TRAVIS_PHP_VERSION = ${MIN_PHP%.*} && ! -d php-$MIN_PHP/sapi ]]; then
          wget http://museum.php.net/php5/php-$MIN_PHP.tar.bz2 -O - | tar -xj &&
          (cd php-$MIN_PHP && ./configure --enable-sigchild --enable-pcntl && make -j2)
      fi

    - |
      # php.ini configuration
      for PHP in $TRAVIS_PHP_VERSION $php_extra; do
          phpenv global $PHP 2>/dev/null || (cd / && wget https://s3.amazonaws.com/travis-php-archives/binaries/ubuntu/14.04/x86_64/php-$PHP.tar.bz2 -O - | tar -xj)
          INI=~/.phpenv/versions/$PHP/etc/conf.d/travis.ini
          echo date.timezone = Europe/Paris >> $INI
          echo memory_limit = -1 >> $INI
          echo session.gc_probability = 0 >> $INI
          echo opcache.enable_cli = 1 >> $INI
          echo apc.enable_cli = 1 >> $INI
      done

install:
    - |
      # Install the phpunit-bridge from a PR if required
      #
      # To run a PR with a patched phpunit-bridge, first submit the patch for the
      # phpunit-bridge as a separate PR against the next feature-branch then
      # uncomment and update the following line with that PR number
      SYMFONY_PHPUNIT_BRIDGE_PR=5

      if [[ $SYMFONY_PHPUNIT_BRIDGE_PR ]]; then
          git fetch --depth=2 origin refs/pull/$SYMFONY_PHPUNIT_BRIDGE_PR/head
          git rm -rq src/Symfony/Bridge/PhpUnit
          git checkout -q 5f7821553d -- src/Symfony/Bridge/PhpUnit
          export SYMFONY_VERSION=$(cat src/Symfony/Bridge/PhpUnit/composer.json | grep '^ *"dev-master". *"[1-9]' | grep -o '[0-9.]*')
          sed -i 's/"symfony\/phpunit-bridge": ".*"/"symfony\/phpunit-bridge": "'$SYMFONY_VERSION'.x@dev"/' composer.json
          rm -rf .phpunit
      fi

    - |
      # Create local composer packages for each patched components and reference them in composer.json files when cross-testing components
      git config --global user.email ""
      git config --global user.name "Symfony"

      if [[ ! $deps ]]; then
          php .github/build-packages.php HEAD^ src/Symfony/Bridge/PhpUnit
      else
          export SYMFONY_DEPRECATIONS_HELPER=weak &&
          cp composer.json composer.json.orig &&
          echo -e '{\n"require":{'"$(grep phpunit-bridge composer.json)"'"php":"*"},"minimum-stability":"dev"}' > composer.json &&
          php .github/build-packages.php HEAD^ $(find src/Symfony -mindepth 3 -type f -name composer.json -printf '%h\n' | sort) &&
          mv composer.json composer.json.phpunit &&
          mv composer.json.orig composer.json
      fi
      if [[ $SYMFONY_PHPUNIT_BRIDGE_PR ]]; then
          git rm -fq -- src/Symfony/Bridge/PhpUnit/composer.json
          git diff --staged -- src/Symfony/Bridge/PhpUnit/ | git apply -R --index
      fi

    - |
      # For the master branch, when deps=high, the version before master is checked out and tested with the locally patched components
      export SYMFONY_VERSION=$(cat composer.json | grep '^ *"dev-master". *"[1-9]' | grep -o '[0-9.]*')

    - |
      # Set composer's platform to php 7.4 if we're on php 8.
      if [[ $PHP = nightly ]]; then
          composer config platform.php 7.4.99
          export SYMFONY_DEPRECATIONS_HELPER=max[total]=999
      fi

    - |
      # Install symfony/flex
      if [[ $deps = low ]]; then
          export SYMFONY_REQUIRE='>=2.3'
      else
          export SYMFONY_REQUIRE=">=$SYMFONY_VERSION"
      fi
      composer global require --no-progress --no-scripts --no-plugins symfony/flex dev-master

    - |
      # Legacy tests are skipped when deps=high and when the current branch version has not the same major version number as the next one
      [[ $deps = high && ${SYMFONY_VERSION%.*} != $(git show $(git ls-remote --heads | grep -FA1 /$SYMFONY_VERSION | tail -n 1):composer.json | grep '^ *"dev-master". *"[1-9]' | grep -o '[0-9]*' | head -n 1) ]] && export LEGACY=,legacy

      export COMPOSER_ROOT_VERSION=$SYMFONY_VERSION.x-dev
      if [[ $deps ]]; then mv composer.json.phpunit composer.json; fi

    - |
      # phpinfo
      php -i

    - |
      run_tests () {
          set -e
          export PHP=$1
          if [[ $PHP != $TRAVIS_PHP_VERSION && $TRAVIS_PULL_REQUEST != false ]]; then
              echo -e "\\n\\e[33;1mIntermediate PHP version $PHP is skipped for pull requests.\\e[0m"
              return
          fi
          phpenv global ${PHP/hhvm*/hhvm}
          if [[ $PHP = 7.* ]]; then
              ([[ $deps ]] && cd src/Symfony/Component/HttpFoundation; composer config platform.ext-mongodb 1.6.0; composer require --dev --no-update mongodb/mongodb ~1.5.0)
          fi
          tfold 'composer update' $COMPOSER_UP
          if [[ $TRAVIS_PHP_VERSION = 5.* ]]; then
              tfold 'phpunit install' 'composer global remove symfony/flex && ./phpunit install && composer global require --no-progress --no-scripts --no-plugins symfony/flex dev-master'
          else
              tfold 'phpunit install' ./phpunit install
          fi
          if [[ $PHP = ${MIN_PHP%.*} ]]; then
              export PHP=$MIN_PHP
              echo -e "1\\n0" | xargs -I{} bash -c "tfold src/Symfony/Component/Process.sigchild{} SYMFONY_DEPRECATIONS_HELPER=weak ENHANCE_SIGCHLD={} php-$MIN_PHP/sapi/cli/php .phpunit/phpunit-4.8-1/phpunit --colors=always src/Symfony/Component/Process/"
          fi
      }
      export -f run_tests

script:
    echo $TRAVIS_PHP_VERSION $php_extra | xargs -n1 bash -c '(</dev/tty run_tests $0)' || false
